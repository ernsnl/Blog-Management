@using BlogApplication.Data.GlobalTypes
@using BlogApplication.WebFramework.EnumExtensions
@using BlogApplication.WebFramework.HtmlExtensions
@model BlogApplication.Data.Visa.User

@{
    ViewBag.Title = Html.GetWord("Create New User");
}

<h2>@( Model.ID == 0 ? Html.GetWord("Create New User") : Html.GetWord("Edit User"))</h2>

@using (Html.BeginForm("EditUser", "Visa", FormMethod.Post, new { @class = "form-horizontal", @id = "EditUser" }))
{
    <input type='hidden' id='ViewMessages' />
    @Html.HiddenFor(model => model.ID)
    <input type="hidden" name="DeleteInfo" id="DeleteInfo" value="0" />
    <div class="form-group">
        <label class="control-label col-lg-4">@Html.GetWord("First Name")</label>
        <div class="col-lg-4">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-lg-4">@Html.GetWord("Last Name")</label>
        <div class="col-lg-4">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
        </div>
    </div>
    if (Model.ID == 0)
    {
        <div class="form-group">
            <label class="control-label col-lg-4">@Html.GetWord("Username")</label>
            <div class="col-lg-4">
                @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-lg-4">@Html.GetWord("Email")</label>
            <div class="col-lg-4">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-lg-4">@Html.GetWord("Password")</label>
            <div class="col-lg-4">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-lg-4">@Html.GetWord("Confirm Password")</label>
            <div class="col-lg-4">
                <input type="password" id="ConfirmPassword" name="ConfirmPassword" class="form-control" />
            </div>
        </div>
    }
    <div class="form-group">
        <label class="control-label col-lg-4">@Html.GetWord("Select Language")</label>
        <div class="col-lg-4">
            @Html.LanguageDropDownList("MainLanguageID", new { @placeholder = Html.GetWord("Please Select Language"), @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-lg-4">@Html.GetWord("Select User Type")</label>
        <div class="col-lg-4">
            @Html.TranslatedDropDownList("UserType", 6, typeof(UserType), true, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-lg-4">@Html.GetWord("Status")</label>
        <div class="checkbox anim-checkbox ">
            <input type="checkbox" id="StatusID" name="StatusID" @(Model.StatusID == VariableValue.ConvertStatusTypesByte(StatusType.Active) ? "checked ='checked'" : "" ) />
            <label class="control-label col-lg-4 emptyLabel" for="StatusID"></label>
        </div>
    </div>

    <div class="form-actions no-margin-bottom" style="text-align: center;">
        <input type="submit" value="@(Model.ID == 0 ? Html.GetWord("Create") : Html.GetWord("Edit"))" class="btn btn-primary btn-lg " />
        @if (Model.ID > 0)
        {
            <input type="button" value="@Html.GetWord("Delete")" id="DeleteUser" class="btn btn-primary btn-lg " />
        }
    </div>



}


@section scripts{
    @Html.ShowMessages();
    <script>

        $("#DeleteUser").click(function() {
            $("#DeleteInfo").val(1);
            $("form").submit();
        });

        $("#MainLanguageID").chosen();

        @if (Model.ID == 0)
        {
            <text>
        $('#EditUser').validate(
            {
                rules:
                {
                    FirstName:
                    "required",
                    LastName:
                    "required",
                    Username:
                    {
                        required:
                        true,
                        alphaNumeric:
                        true
                    }
                ,
                    Email:
                    {
                        required:
                        true,
                        email:
                        true
                    }
                ,
                    Password:
                    {
                        required:
                        true,
                        minlength:
                        6,
                        maxlength:
                        32,
                        alphaNumeric:
                        true
                    }
                ,
                    ConfirmPassword:
                    {
                        required:
                        true,
                        minlength:
                        6,
                        maxlength:
                        32,
                        equalTo:
                        "#Password"
                    }
                }
            ,
                messages:
                {
                    FirstName:
                    '@Html.GetWord("Required")',
                    LastName:
                    '@Html.GetWord("Required")',
                    Username:
                    {
                        required:
                        '@Html.GetWord("Required")',
                        alphaNumeric:
                        '@Html.GetWord("It must be alpha-numeric")'
                    }
                ,
                    Email:
                    {
                        required:
                        '@Html.GetWord("Required")',
                        email:
                        '@Html.GetWord("Email must be in  the correct form : noreply@ernsnl.com")'
                    }
                ,
                    Password:
                    {
                        required:
                        '@Html.GetWord("Required")',
                        minlength:
                        '@Html.GetWord("At least 6 characters required!")',
                        maxlength:
                        '@Html.GetWord("No longer than 32 characters")',
                        alphaNumeric:
                        '@Html.GetWord("It must be alpha-numeric")'
                    }
                ,
                    ConfirmPassword:
                    {
                        required:
                        '@Html.GetWord("Required")',
                        minlength:
                        '@Html.GetWord("At least 6 characters required!")',
                        maxlength:
                        '@Html.GetWord("No longer than 32 characters")',
                        equalTo:
                        '@Html.GetWord("Password does not match")'
                    }
                }
            ,
                errorClass:
                'help-block',
                errorElement:
                'span',
                highlight:
                function (element, errorClass, validClass) {
                    $
                        (element).parents('.form-group').removeClass('has-success').addClass('has-error');
                }
            ,
                unhighlight:
                function (element, errorClass, validClass) {
                    $
                        (element).parents('.form-group').removeClass('has-error').addClass('has-success');
                }
            }
        );
        </text>
        }
        else
        {
            <text>
        $('#EditUser').validate({
            rules: {
                FirstName:
                "required",
                LastName:
                "required",
                Username: {
                    required: true,
                    alphaNumeric: true
                }
            },
            messages: {
                FirstName: '@Html.GetWord("Required")',
                LastName: '@Html.GetWord("Required")',
                Username: {
                    required: '@Html.GetWord("Required")',
                    alphaNumeric: '@Html.GetWord("It must be alpha-numeric")'
                }
            },
            errorClass:
            'help-block',
            errorElement:
            'span',
            highlight:
            function (element, errorClass, validClass) {
                $
                    (element).parents('.form-group').removeClass('has-success').addClass('has-error');
            },
            unhighlight:
            function (element, errorClass, validClass) {
                $
                    (element).parents('.form-group').removeClass('has-error').addClass('has-success');
            }
        }
);
        </text>
        }
    </script>
}