@using BlogApplication.Data.GlobalTypes
@using BlogApplication.Data.MainSystem
@using BlogApplication.Framework.Extensions.EnumExtension
@using BlogApplication.WebFramework.EnumExtensions
@using BlogApplication.WebFramework.HtmlExtensions
@model BlogApplication.Data.MainSystem.Domain

@{
    ViewBag.Title = Html.GetWord("Update Current Domain");
}

<h2>@Html.GetWord("Update Current Domain") </h2>
<input type='hidden' id='ViewMessages' />

@using (Html.BeginForm("UpdateCurrentDomain", "SystemMain", FormMethod.Post, new { @class = "form-horizontal", @id = "UpdateCurrentDomain", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.ID)

    <div class="panel panel-default">
        <div class="panel-body">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#main" data-toggle="tab">@Html.GetWord("Main")</a>
                </li>
                <li>
                    <a href="#emailSettings" data-toggle="tab">@Html.GetWord("Email Settings")</a>
                </li>
                <li>
                    <a href="#imageSetting" data-toggle="tab">@Html.GetWord("Image Settings")</a>
                </li>
                <li>
                    <a href="#ftpSetting" data-toggle="tab">@Html.GetWord("Ftp Settings")</a>
                </li>
                <li>
                    <a href="#socialSettings" data-toggle="tab">@Html.GetWord("Social Settings")</a>
                </li>
                <li>
                    <a href="#seoSettings" data-toggle="tab">@Html.GetWord("SEO Settings")</a>
                </li>
                <li>
                    <a href="#editorSettings" data-toggle="tab">@Html.GetWord("Panel Editor Settings")</a>
                </li>

            </ul>
            <div class="tab-content">
                <div class="tab-pane fade in active" id="main">
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Domain Name")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.DomainName, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Domain Url")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.DomainUrl, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Console Domain Url")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.ConsoleDomainUrl, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Domain Default Language")</label>
                        <div class="col-lg-4">
                            @Html.LanguageDropDownList("DefaultLanguage", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div id="emailSettings" class="tab-pane fade in">
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Stmp Host")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.SmtpHost, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Stmp Email")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.Username, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Stmp Password")</label>
                        <div class="col-lg-4">
                            @Html.PasswordFor(model => model.SmtpPassword, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Stmp Port")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.SmtpPort, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Enable SSL")</label>
                        <div class="checkbox anim-checkbox ">
                            <input type="checkbox" id="EnableSSL" name="EnableSSL" @(Convert.ToBoolean(Model.EnableSSL) ? "checked ='checked'" : "" ) />
                            <label class="control-label col-lg-4 emptyLabel" for="EnableSSL"></label>
                        </div>
                    </div>
                </div>
                <div id="imageSetting" class="tab-pane fade in">
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Upload Background Pic")</label>
                        <div class="col-lg-4">
                            <input class="btn btn-default form-control" id="DomainBackgroundImgName" name="file" type="file" value="@Html.GetWord("Upload")" />
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Upload FavIco")</label>
                        <div class="col-lg-4">
                            <input class="btn btn-default form-control" id="DomainFavIcoName" name="file" type="file" value="@Html.GetWord("Upload FavIcon")" />
                        </div>
                    </div>

                </div>
                <div id="ftpSetting" class="tab-pane fade in">
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("CDN Url")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.CDNUrl, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("FTP Username")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.FTPUsername, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("FTP Password")</label>
                        <div class="col-lg-4">
                            @Html.PasswordFor(model => model.FTPPassword, new {@class = "form-control"})
                        </div>
                    </div>
                </div>
                <div id="socialSettings" class="tab-pane fade in">
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Facebook AppID")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.FacebookAppID, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Google Analytics ID")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.GoogleAnalyticsID, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Disqus Username")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.DisqusUserName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-lg-4">@Html.GetWord("Twitter Username")</label>
                        <div class="col-lg-4">
                            @Html.TextBoxFor(model => model.TwitterUserName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="panel-heading">
                        @Html.GetWord("Domain Social Information Table")
                        <a class="headerLink" href="@Url.Action("EditDomainSocial", "SystemMain" , new {@DomainID = Model.ID})" title="@Html.GetWord("Add New Domain Social Information")"><i class="icon-plus"></i></a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="CategoryListTable">
                            <thead>
                                <tr>
                                    <th>@Html.GetWord("SocialType")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.DomainSocials.Count > 0)
                                {
                                    foreach (var item in Model.DomainSocials)
                                    {
                                        <tr>
                                            <td>@Html.GetTranslatedEnumName(item.SocialMediaType, typeof(SocialTypes))</td>
                                            <td>
                                                <a href="@Url.Action("EditDomainSocial", "SystemMain", new {@ID = item.ID, @DomainID = Model.ID})">@Html.GetWord("Edit")</a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="2">@Html.GetWord("Nothing is found")</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="seoSettings" class="tab-pane fade in">
                    <div class="panel-heading">
                        @Html.GetWord("Domain Seo Information Table")
                        <a class="headerLink" href="@Url.Action("EditCurrentDomainSEOInformation", "SystemMain")" title="@Html.GetWord("Add New Domain SEO Information")"><i class="icon-plus"></i></a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="CategoryListTable">
                            <thead>
                                <tr>
                                    <th>@Html.GetWord("Location")</th>
                                    <th>@Html.GetWord("Language")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.SEOInformations.Count > 0)
                            {
                                foreach (var item in Model.SEOInformations)
                                {
                                <tr>
                                    <td>@Html.GetTranslatedEnumName(item.LocationID, typeof (DomainLocationSEO))</td>
                                    <td>@Html.GetLanguageName(Convert.ToInt64(item.LanguageID))</td>
                                    <td>
                                        <a href="@Url.Action("EditCurrentDomainSEOInformation", "SystemMain", new {@ID = item.ID})">@Html.GetWord("Edit")</a>
                                    </td>
                                </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="3">@Html.GetWord("Nothing is found")</td></tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div id="editorSettings" class="tab-pane fade in">
                    <div class="panel-heading">
                        @Html.GetWord("Domain Navigation Table")
                    </div>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover" id="CategoryListTable">
                            <thead>
                                <tr>
                                    <th>@Html.GetWord("Editor Type")</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in EnumExtension.GetValues<EditorPanelType>())
                                {
                                    <tr>
                                        <td>@Html.GetTranslatedEnumName(item, typeof(EditorPanelType))</td>
                                        <td>
                                            <a href="@Url.Action("EditNavigationPanel", "SystemMain", new { @typeID = (byte)item, @DomainID = Model.ID})">@Html.GetWord("Edit")</a>
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="form-actions no-margin-bottom" style="text-align: center;">
                <input type="submit" value="@Html.GetWord("Update")" class="btn btn-primary btn-lg " />
            </div>
        </div>
    </div>
}







@section scripts{
    @Html.ShowMessages()
    <script>
        $('#UpdateCurrentDomain').validate({
            rules: {
                DomainName: "required",
                DomainUrl: "required",
                ConsoleDomainUrl: "required",
                SmtpHost: "required",
                Username: "required",
                SmtpPort: "required",
                CDNUrl: "required",
                FTPUsername: "required",
                FacebookAppID: "required",
                GoogleAnalyticsID: "required",
                DisqusUserName: "required",
                TwitterUserName: "required"
            },
            messages:
            {
                DomainName: '@Html.GetWord("Required")',
                DomainUrl: '@Html.GetWord("Required")',
                ConsoleDomainUrl: '@Html.GetWord("Required")',
                SmtpHost: '@Html.GetWord("Required")',
                Username: '@Html.GetWord("Required")',
                CDNUrl: '@Html.GetWord("Required")',
                FTPUsername: '@Html.GetWord("Required")',
                FacebookAppID: '@Html.GetWord("Required")',
                GoogleAnalyticsID: '@Html.GetWord("Required")',
                DisqusUserName: '@Html.GetWord("Required")',
                TwitterUserName: '@Html.GetWord("Required")'

            },
            errorClass:
                'help-block',
            errorElement:
                'span',
            highlight:
                function (element, errorClass, validClass) {
                    $(element).parents('.form-group').removeClass('has-success').addClass('has-error');
                },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parents('.form-group').removeClass('has-error').addClass('has-success');
            }
        });
    </script>
}