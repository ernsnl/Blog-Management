
@using BlogApplication.WebFramework.HtmlExtensions
@model BlogApplication.Data.Visa.User
@{

    ViewBag.Title = Html.GetWord("Login");
    Layout = "~/Views/Shared/_AnonymousLayout.cshtml";
}

<div class="tab-content">
    <input type='hidden' id='ViewMessages' />
    <div id="login" class="tab-pane active">
        @using (Html.BeginForm("Login", "Account", new {returnUrl = this.Request["returnUrl"]}, FormMethod.Post, new {@class = "form-signin", @id = "LoginForm"}))
        {
            @Html.AntiForgeryToken()
            <p class="text-muted text-center btn-block btn btn-primary btn-rect">
                @Html.GetWord("Enter your username and password")
            </p>

            <div class="form-group">
                <div class="col-lg-12">

                    @Html.TextBoxFor(model => model.Username, new {@placeholder = Html.GetWord("Username"), @class = "form-control"})
                </div>
            </div>


            <div class="form-group">
                <div class="col-lg-12">

                    @Html.PasswordFor(model => model.Password, new {@placeholder = Html.GetWord("Password"), @class = "form-control"})
                </div>
            </div>

            <button class="btn text-muted text-center btn-danger" type="submit">@Html.GetWord("Login")</button>
        }
    </div>

    <div class="text-center">
        <ul class="list-inline">
            <li><a class="text-muted" href="@Url.Action("ForgotPassword", "Account")">@Html.GetWord("Forgot Password")</a></li>
        </ul>
    </div>
</div>

@section scripts{
    @Html.ShowMessages()
    <script>
        $("#LoginForm").validate({
            rules: {
                Username: {
                    required: true,
                    alphaNumeric: true
                },
                Password: {
                    required: true,
                    minlength: 6,
                    maxlength: 32,
                    alphaNumeric: true
                }
            },
            messages: {
                Username: {
                    required: '@Html.GetWord("Required")',
                    alphaNumeric: '@Html.GetWord("It must be alpha-numeric")'
                },
                Password: {
                    required: '@Html.GetWord("Required")',
                    minlength: '@Html.GetWord("At least 6 characters required!")',
                    maxlength: '@Html.GetWord("No longer than 32 characters")',
                    alphaNumeric: '@Html.GetWord("It must be alpha-numeric")'
                }
            },
            errorClass:
                'help-block',
            errorElement:
                'span',
            highlight:
                function (element, errorClass, validClass) {
                    $(element).parents('.form-group').removeClass('has-success').addClass('has-error');
                },
            unhighlight: function (element, errorClass, validClass) {
                $(element).parents('.form-group').removeClass('has-error').addClass('has-success');
            }
        });
    </script>

}
